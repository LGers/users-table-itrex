{"version":3,"sources":["Components/MainTable/MainTable.module.css","Components/Paginator/Paginator.module.css","Components/SearchBlock/SearchBlock.module.css","Components/Header/Header.jsx","Components/SearchBlock/SearchBlock.jsx","Components/MainTable/MainTable.jsx","Components/Paginator/Paginator.jsx","Components/ProfileInfo/ProfileInfo.jsx","Components/store.js","Components/common.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","className","SearchBlock","st","SearchContainer","NameSearch","placeholder","onChange","e","search","target","value","StateFilter","name","size","statesList","map","el","stateName","id","UserRow","onClick","showProfile","parentElement","uniqueId","MainTable","userId","firstName","lastName","email","phone","state","usersList","users","u","index","adress","pos","sortDirection","field","sortBy","sortASC","sortTableBy","Paginator","totalUsersCount","pageSize","currentUsersPage","selectCurrentPage","onDecrement","onIncrement","pagesCount","Math","ceil","pages","i","push","prevBtn","p","PaginatorActive","onPageChanged","dateTime","nextBtn","ProfileInfo","profileInfo","description","streetAddress","city","zip","initialState","findUsers","counter","usersPerPage","lastPage","currentSearch","searchString","searchState","getLastPage","usersQtty","floor","getUsersOnCurrentPage","pageNumber","filter","length","usersOnCurrentPage","sortByFieldASC","a","b","usersState","App","useState","setUsers","setState","useEffect","fetchUsers","usersFromServer","getUsers","fetch","response","json","data","statesListArray","idState","forEach","includes","getStatesList","sortInState","sort","sortByFieldDESC","searchByString","objectToArray","objArray","result","tempArrayOfObj","Object","values","val","some","splice","user","toString","toLowerCase","filterByState","searchBy","searchValue","sortby","newProfile","find","UId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cafe1174.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainTable\":\"MainTable_MainTable__35-bd\",\"MainTableActive\":\"MainTable_MainTableActive__2gB4t\",\"userId\":\"MainTable_userId__3d3Uo\",\"sort\":\"MainTable_sort__Q8ZD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__2a1vi\",\"PaginatorActive\":\"Paginator_PaginatorActive__3EyvI\",\"prevBtn\":\"Paginator_prevBtn__2Nz9h\",\"nextBtn\":\"Paginator_nextBtn__1v2J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"SearchBlock_SearchContainer__fa6KC\",\"NameSearch\":\"SearchBlock_NameSearch__2MwFv\",\"StateFilter\":\"SearchBlock_StateFilter__2wsB-\"};","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <p>\r\n                IT Rex test\r\n            </p>\r\n\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport st from './SearchBlock.module.css'\r\n\r\n\r\nconst SearchBlock = (props) => {\r\n    return (\r\n\r\n        <div className={st.SearchContainer}>\r\n\r\n            <input className={st.NameSearch} placeholder='Search by Name:'\r\n                   onChange={(e)=>{\r\n                       props.search(e.target.value, 'byString')\r\n                   }}/>\r\n\r\n            <div>\r\n                <select className={st.StateFilter} name=\"State\" size='1'\r\n                        onChange={(e) => {\r\n                    props.search(e.target.value, 'byState')\r\n                }}>\r\n                    <option value=\"SelectNone\">Select State</option>\r\n                    {props.statesList.map(el => <option key={el.id} value={el.stateName}>{el.stateName}</option>)}\r\n                </select>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBlock;","import React from \"react\";\r\nimport st from \"./MainTable.module.css\"\r\n\r\nconst UserRow = (props) => {\r\n    return (\r\n        <div  onClick={(e)=>{\r\n            props.showProfile(e.target.parentElement.id)\r\n        }}>\r\n            <div id = {props.uniqueId} className={st.MainTable} >\r\n                <div className={st.userId}>{props.id}</div>\r\n                <div>{props.uniqueId} - {props.firstName}</div>\r\n                <div>{props.lastName}</div>\r\n                <div>{props.email}</div>\r\n                <div>{props.phone}</div>\r\n                <div>{props.state}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MainTable = (props) => {\r\n    const usersList = props.users.map((u, index) => (\r\n        <UserRow key={index}\r\n                 id={u.id}\r\n                 firstName={u.firstName}\r\n                 lastName={u.lastName}\r\n                 email={u.email}\r\n                 phone={u.phone}\r\n                 state={u.adress.state}\r\n                 pos={u.index}\r\n                 showProfile={props.showProfile}\r\n                 uniqueId={u.uniqueId}\r\n        />)\r\n    )\r\n\r\n    const sortDirection = (field) => {\r\n        if (props.state.sortBy !== field)\r\n        {return <span>-</span>}\r\n\r\n        if (props.state.sortASC) {\r\n            return <span>↓</span>\r\n        } else return <span>↑</span>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={st.MainTable}>\r\n                <div className={st.userId} onClick={(e) => {\r\n                    props.sortTableBy('id')\r\n                }}><p>id {sortDirection('id')}</p></div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('firstName')\r\n                }}>\r\n                    <p>First name{sortDirection('firstName')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('lastName')\r\n                }}>\r\n                    <p>Last Name {sortDirection('lastName')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('email')\r\n                }}>\r\n                    <p>Email{sortDirection('email')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('phone')\r\n                }}>\r\n                    <p>Phone{sortDirection('phone')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('state')\r\n                }}>\r\n                    <p>State{sortDirection('state')}</p>\r\n                </div>\r\n            </div>\r\n            {usersList}\r\n        </div>\r\n    )\r\n}\r\nexport default MainTable;","import React from \"react\";\r\nimport st from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({\r\n                       totalUsersCount, pageSize, currentUsersPage,\r\n                       selectCurrentPage, onDecrement, onIncrement\r\n                   }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const onPageChanged = (p) => {\r\n        selectCurrentPage(p)\r\n    }\r\n\r\n    return (\r\n        <div className={st.Paginator}>\r\n            <div className={st.prevBtn}\r\n                 onClick={(e) => {\r\n                     onDecrement()\r\n                 }}>Previous\r\n            </div>\r\n\r\n            {pages.map(p => {\r\n                return <div key={p.dateTime}\r\n                            className={(currentUsersPage === p) && st.PaginatorActive}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p);\r\n                            }}>{p}\r\n                </div>\r\n            })}\r\n\r\n            <div className={st.nextBtn}\r\n                 onClick = {(e) => {\r\n                onIncrement()\r\n            }}>Next\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;","import React from \"react\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    return (\r\n        <div className=\"ProfileInfo\">\r\n            <p>Profile info</p>\r\n            <p>Selected profile: <span>{props.profileInfo.firstName} {props.profileInfo.lastName}</span></p>\r\n            <p>Description: <span>{props.profileInfo.description}</span></p>\r\n            <p>Address: <span>{props.profileInfo.adress.streetAddress}</span></p>\r\n            <p>City: <span>{props.profileInfo.adress.city}</span></p>\r\n            <p>State: <span>{props.profileInfo.adress.state}</span></p>\r\n            <p>Index: <span>{props.profileInfo.adress.zip}</span></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export let initialState = {\r\n    profileInfo:\r\n        {\r\n            \"id\": '-',\r\n            \"firstName\": \"Nothing to Show\",\r\n            \"lastName\": \"-\",\r\n            \"email\": \"-\",\r\n            \"phone\": \"-\",\r\n            \"adress\": {\r\n                \"streetAddress\": \"-\",\r\n                \"city\": \"-\",\r\n                \"state\": \"-\",\r\n                \"zip\": \"-\"\r\n            },\r\n            \"description\": \"-\",\r\n            \"uniqueId\": '0'\r\n        },\r\n    findUsers:[],\r\n    users: [\r\n        {\r\n            \"id\": 1,\r\n            \"firstName\": \"Nothing to Show\",\r\n            \"lastName\": \"-\",\r\n            \"email\": \"-\",\r\n            \"phone\": \"-\",\r\n            \"adress\": {\r\n                \"streetAddress\": \"-\",\r\n                \"city\": \"-\",\r\n                \"state\": \"-\",\r\n                \"zip\": \"-\"\r\n            },\r\n            \"description\": \"-\",\r\n           \"uniqueId\": '0'\r\n        },\r\n    ],\r\n    statesList: [\r\n        {id: 1, stateName: \"WI\"},\r\n        {id: 2, stateName: \"TN\"},\r\n        {id: 3, stateName: \"FL\"},\r\n        {id: 4, stateName: \"WI\"},\r\n        {id: 5, stateName: \"NE\"},\r\n        {id: 6, stateName: \"NY\"},\r\n    ],\r\n    counter: 1,\r\n    usersPerPage: 20,\r\n    lastPage: 1,\r\n    currentUsersPage: 1,\r\n    currentSearch: '',\r\n    sortBy: '',\r\n    sortASC: true,\r\n    searchString:'',\r\n    searchState:'SelectNone'\r\n}","export const getLastPage =(usersQtty, usersPerPage)=>{\r\n    let lastPage=1\r\n    if (usersQtty % usersPerPage === 0) {\r\n        lastPage=usersQtty / usersPerPage\r\n        return lastPage\r\n    } else {\r\n        lastPage =  Math.floor(usersQtty / usersPerPage) + 1\r\n        return lastPage\r\n    }\r\n}\r\n\r\nexport const getUsersOnCurrentPage = (pageNumber, users, usersPerPage, searchState) => {\r\n\r\n    if (searchState !== 'SelectNone') {\r\n        users = users.filter(el => el.adress.state === searchState)\r\n    }\r\n    if (users.length <= usersPerPage) return users\r\n\r\n    let usersOnCurrentPage = []\r\n    let lastPage = getLastPage(users.length, usersPerPage)\r\n\r\n    if (pageNumber !== lastPage) {\r\n        for (let i = (pageNumber - 1) * usersPerPage; i < (pageNumber) * usersPerPage; i++) {\r\n            usersOnCurrentPage.push(users[i])\r\n        }\r\n        return usersOnCurrentPage\r\n    } else {\r\n        for (let i = (pageNumber - 1) * usersPerPage; i < users.length; i++) {\r\n            usersOnCurrentPage.push(users[i])\r\n        }\r\n        return usersOnCurrentPage\r\n    }\r\n}\r\n\r\nexport const getStatesList =(users)=>{\r\n    let statesListArray=[]\r\n    let statesList=[]\r\n    let idState = 0\r\n    users.forEach(el => {\r\n        if (!statesListArray.includes(el.adress.state)) {\r\n            statesListArray.push(el.adress.state)\r\n            statesList.push({id: idState, stateName: el.adress.state})\r\n            idState = idState + 1\r\n        }\r\n    })\r\n    return statesList\r\n}\r\n\r\nexport const sortByFieldASC = (field) => {\r\n    return (a, b) => a[field] > b[field] ? 1 : -1;\r\n}\r\nexport const sortByFieldDESC = (field) => {\r\n    return (a, b) => a[field] > b[field] ? -1 : 1;\r\n}","import React, {useEffect, useState} from \"react\"\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport SearchBlock from \"./Components/SearchBlock/SearchBlock\";\nimport MainTable from \"./Components/MainTable/MainTable\";\nimport Paginator from \"./Components/Paginator/Paginator\";\nimport ProfileInfo from \"./Components/ProfileInfo/ProfileInfo\";\nimport {initialState} from \"./Components/store\";\nimport {getLastPage, getStatesList, getUsersOnCurrentPage, sortByFieldASC, sortByFieldDESC} from \"./Components/common\";\n\nconst usersState = []\n\nfunction App() {\n\n\n    const baseURL = 'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json'\n    const [users, setUsers] = useState(usersState)\n    const [state, setState] = useState(initialState)\n\n    const usersOnCurrentPage = (p) => getUsersOnCurrentPage(p,\n        state.findUsers,\n        state.usersPerPage,\n        state.searchState\n    )\n\n    useEffect(() => {\n        const getUsers = async () => {\n            const usersFromServer = await fetchUsers()\n            setUsers(usersFromServer)\n            let lastPage = getLastPage(usersFromServer.length, state.usersPerPage)\n            let usersOnCurrentPage = getUsersOnCurrentPage(state.currentUsersPage, usersFromServer, state.usersPerPage , state.searchState)\n            setState({\n                ...state,\n                users: state.users = usersOnCurrentPage,\n                findUsers: state.findUsers = usersFromServer,\n                lastPage: state.lastPage = lastPage\n            })\n        }\n        getUsers()\n    }, [])\n\n    const fetchUsers = async () => {\n        const response = await fetch(baseURL)\n        const data = await response.json()\n        for (let i = 0; i < data.length; i++) {\n            data[i].uniqueId = i\n        }\n        return data\n    }\n\n    let statesList = getStatesList(state.findUsers)\n    const selectCurrentPage = (p) => {\n        setState({...state, currentUsersPage: p, users: state.users = usersOnCurrentPage(p)})\n    }\n\n    const onDecrement = () => {\n        if (state.currentUsersPage !== 1) {\n            setState({\n                ...state,\n                currentUsersPage: state.currentUsersPage - 1,\n                // users: state.users = usersOnCurrentPage\n                users: state.users = usersOnCurrentPage(state.currentUsersPage - 1)\n            })\n        }\n    }\n    const onIncrement = () => {\n        if (state.currentUsersPage !== state.lastPage) {\n            setState({\n                ...state,\n                currentUsersPage: state.currentUsersPage + 1,\n                users: state.users = usersOnCurrentPage(state.currentUsersPage + 1)\n            })\n        }\n    }\n\n    const sortInState = (field) => {\n\n        if (state.sortBy !== field) {\n            state.findUsers.sort(sortByFieldASC(field))\n        } else {\n            if (state.sortASC) {\n                state.findUsers.sort(sortByFieldASC(field))\n            } else {\n                state.findUsers.sort(sortByFieldDESC(field))\n            }\n\n        }\n        setState({\n            ...state, users: state.findUsers = usersOnCurrentPage(state.currentUsersPage),\n            sortASC: !state.sortASC,\n            sortBy: state.sortBy = field\n        })\n    }\n    const sortTableBy = (sortby) => {\n        switch (sortby) {\n            case 'id' :\n                sortInState('id')\n                break\n            case 'firstName' :\n                sortInState('firstName')\n                break\n            case 'lastName' :\n                sortInState('lastName')\n                break\n            case 'phone' :\n                sortInState('phone')\n                break\n            case 'email' :\n                sortInState('email')\n                break\n            case 'state' :\n                sortInState('state')\n                break\n            default:\n                return 1\n        }\n    }\n\n\n    const searchByString = (searchString) => {\n\n        const objectToArray = (objArray) => {\n            let result = []\n            let tempArrayOfObj = []\n\n            result = Object.values(objArray).filter(val => typeof (val) !== 'object')\n            tempArrayOfObj = Object.values(objArray).filter(val => typeof (val) === 'object')\n\n            while (Object.values(tempArrayOfObj).some(val => typeof (val) === 'object')) {\n                tempArrayOfObj.forEach(el => {\n\n                    Object.values(el).forEach(el => {\n\n                        if (typeof (el) === 'object') {\n                            tempArrayOfObj.push(el)\n                        } else {\n                            result.push(el)\n                        }\n                    })\n                    tempArrayOfObj.splice(0, 1)\n                })\n            }\n\n            return result\n        }\n\n        if (searchString !== '') {\n            let result = []\n\n            for (let i = 0; i < users.length; i++) {\n                let user = {...users[i]}\n                delete user.uniqueId\n                let isStringInclude = objectToArray(user).some(el => el.toString().toLowerCase().includes(searchString.toLowerCase()))\n\n                if (isStringInclude && state.searchString === '') {\n                    result.push(users[i])\n                }\n            }\n\n            let lastPage = getLastPage(result.length, state.usersPerPage)\n            setState({\n                ...state,\n                findUsers: state.findUsers = result,\n                users: state.users = usersOnCurrentPage(state.currentUsersPage),\n                lastPage: state.lastPage = lastPage\n            })\n        } else {\n            let lastPage = getLastPage(state.findUsers.length, state.usersPerPage)\n            setState({...state, findUsers: state.findUsers = users, lastPage: state.lastPage = lastPage})\n        }\n    }\n\n    const filterByState = (stateName) => {\n        let lastPage = getLastPage(state.findUsers.length, state.usersPerPage)\n        if (stateName === 'SelectNone') {\n            setState({\n                ...state,\n                users: state.users = getUsersOnCurrentPage(state.currentUsersPage, state.findUsers, state.usersPerPage, stateName),\n                searchState: state.searchState = 'SelectNone',\n                lastPage: state.lastPage = lastPage\n            })\n        } else {\n            let result = []\n            state.findUsers.forEach(el => {\n                if (el.adress.state === stateName) result.push(el)\n            })\n\n            lastPage = getLastPage(result.length, state.usersPerPage)\n            setState({\n                ...state, users: state.users = result,\n                searchState: state.searchState = stateName,\n                lastPage: state.lastPage = lastPage\n            })\n        }\n    }\n\n    const search = (searchValue, searchBy) => {\n        if (searchBy === 'byString') {\n            searchByString(searchValue)\n        }\n\n        if (searchBy === 'byState') {\n            filterByState(searchValue)\n        }\n    }\n\n    const showProfile = (userId) => {\n\n        let newProfile = {}\n        newProfile = state.users.find(UId => UId.uniqueId.toString() === userId)\n        setState({...state, profileInfo: state.profileInfo = newProfile})\n    }\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className={'MainContent'}>\n\n                <SearchBlock statesList={statesList}\n                             filterByState={filterByState}\n                             searchBy={searchByString}\n                             search={search}\n                />\n\n                <MainTable\n                    users={state.users}\n                    sortTableBy={sortTableBy}\n                    state={state}\n                    showProfile={showProfile}\n                />\n                <Paginator\n                    totalUsersCount={state.findUsers.length}\n                    pageSize={state.usersPerPage}\n                    currentUsersPage={state.currentUsersPage}\n                    selectCurrentPage={selectCurrentPage}\n                    onDecrement={onDecrement}\n                    onIncrement={onIncrement}\n                />\n                <ProfileInfo profileInfo={state.profileInfo}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {initialState} from \"./Components/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App state={initialState}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}