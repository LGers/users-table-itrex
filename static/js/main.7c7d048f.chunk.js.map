{"version":3,"sources":["Components/MainTable/MainTable.module.css","Components/Paginator/Paginator.module.css","Components/SearchBlock/SearchBlock.module.css","Components/Header/Header.jsx","Components/SearchBlock/SearchBlock.jsx","Components/MainTable/MainTable.jsx","Components/Paginator/Paginator.jsx","Components/ProfileInfo/ProfileInfo.jsx","Components/store.js","Components/common.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","className","SearchBlock","st","SearchContainer","NameSearch","placeholder","onChange","e","search","target","value","StateFilter","name","size","statesList","map","el","stateName","selected","selectedState","searchState","currentState","id","UserRow","onClick","showProfile","parentElement","uniqueId","MainTable","userId","firstName","lastName","email","phone","state","usersList","users","u","index","adress","pos","sortDirection","field","sortBy","sortASC","sortTableBy","Paginator","currentUsersPage","selectCurrentPage","onDecrement","onIncrement","pagesCount","pages","i","push","prevBtn","p","PaginatorActive","onPageChanged","dateTime","nextBtn","ProfileInfo","profileInfo","description","streetAddress","city","zip","initialState","findUsers","usersPerPage","lastPage","searchString","getLastPage","usersQtty","Math","floor","getUsersOnCurrentPage","pageNumber","filter","length","usersOnCurrentPage","sortByFieldASC","a","b","usersState","App","useState","setUsers","setState","useEffect","fetchUsers","usersFromServer","getUsers","fetch","response","json","data","statesListArray","idState","forEach","includes","getStatesList","searchByString","objectToArray","objArray","result","tempArrayOfObj","Object","values","val","some","splice","resultUsers","user","toString","toLowerCase","filterByState","searchBy","searchValue","sort","sortByFieldDESC","newProfile","find","UId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c7d048f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainTable\":\"MainTable_MainTable__35-bd\",\"MainTableActive\":\"MainTable_MainTableActive__2gB4t\",\"userId\":\"MainTable_userId__3d3Uo\",\"sort\":\"MainTable_sort__Q8ZD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__2a1vi\",\"PaginatorActive\":\"Paginator_PaginatorActive__3EyvI\",\"prevBtn\":\"Paginator_prevBtn__2Nz9h\",\"nextBtn\":\"Paginator_nextBtn__1v2J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"SearchBlock_SearchContainer__fa6KC\",\"NameSearch\":\"SearchBlock_NameSearch__2MwFv\",\"StateFilter\":\"SearchBlock_StateFilter__2wsB-\"};","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <p>\r\n                IT Rex test\r\n            </p>\r\n\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport st from './SearchBlock.module.css'\r\n\r\nconst selectState = (selectedState, currentState) => {\r\n    return selectedState === currentState\r\n        ? `selected`\r\n        : '';\r\n}\r\n\r\nconst SearchBlock = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={st.SearchContainer}>\r\n\r\n            <input className={st.NameSearch} placeholder='Search by Name:'\r\n                   onChange={(e)=>{\r\n                       props.search(e.target.value, 'byString')\r\n                   }}/>\r\n\r\n            <div>\r\n                <select className={st.StateFilter} name=\"State\" size='1'\r\n                        onChange={(e) => {\r\n                            props.search(e.target.value, 'byState')\r\n                        }}>\r\n                    <option value=\"SelectNone\">Select State</option>\r\n                    {props.statesList.map(el =>\r\n                        <option key={el.id} value={el.stateName}\r\n                                selected={selectState(props.searchState, el.stateName)}>\r\n                            {el.stateName}\r\n                        </option>)}\r\n                </select>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBlock;","import React from \"react\";\r\nimport st from \"./MainTable.module.css\"\r\n\r\nconst UserRow = (props) => {\r\n    return (\r\n        <div  onClick={(e)=>{\r\n            props.showProfile(e.target.parentElement.id)\r\n        }}>\r\n            <div id = {props.uniqueId} className={st.MainTable} >\r\n                <div className={st.userId}>{props.id}</div>\r\n                <div>{props.firstName}</div>\r\n                <div>{props.lastName}</div>\r\n                <div>{props.email}</div>\r\n                <div>{props.phone}</div>\r\n                <div>{props.state}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MainTable = (props) => {\r\n\r\n    const usersList = props.users.map((u, index) => (\r\n        <UserRow key={index}\r\n                 id={u.id}\r\n                 firstName={u.firstName}\r\n                 lastName={u.lastName}\r\n                 email={u.email}\r\n                 phone={u.phone}\r\n                 state={u.adress.state}\r\n                 pos={u.index}\r\n                 showProfile={props.showProfile}\r\n                 uniqueId={u.uniqueId}\r\n        />)\r\n    )\r\n\r\n    const sortDirection = (field) => {\r\n        if (props.state.sortBy !== field)\r\n        {return <span>-</span>}\r\n\r\n        if (props.state.sortASC) {\r\n            return <span>↓</span>\r\n        } else return <span>↑</span>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={st.MainTable}>\r\n                <div className={st.userId} onClick={(e) => {\r\n                    props.sortTableBy('id')\r\n                }}><p>id {sortDirection('id')}</p></div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('firstName')\r\n                }}>\r\n                    <p>First name{sortDirection('firstName')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('lastName')\r\n                }}>\r\n                    <p>Last Name {sortDirection('lastName')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('email')\r\n                }}>\r\n                    <p>Email{sortDirection('email')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('phone')\r\n                }}>\r\n                    <p>Phone{sortDirection('phone')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('state')\r\n                }}>\r\n                    <p>State{sortDirection('state')}</p>\r\n                </div>\r\n            </div>\r\n            {usersList}\r\n        </div>\r\n    )\r\n}\r\nexport default MainTable;","import React from \"react\";\r\nimport st from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({\r\n                       currentUsersPage,\r\n                       selectCurrentPage, onDecrement, onIncrement, pagesCount\r\n                   }) => {\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const onPageChanged = (p) => {\r\n        selectCurrentPage(p)\r\n    }\r\n\r\n    return (\r\n        <div className={st.Paginator}>\r\n            <div className={st.prevBtn}\r\n                 onClick={(e) => {\r\n                     onDecrement()\r\n                 }}>Previous\r\n            </div>\r\n\r\n            {pages.map(p => {\r\n                return <div key={p.dateTime}\r\n                            className={(currentUsersPage === p) && st.PaginatorActive}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p);\r\n                            }}>{p}\r\n                </div>\r\n            })}\r\n\r\n            <div className={st.nextBtn}\r\n                 onClick = {(e) => {\r\n                onIncrement()\r\n            }}>Next\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;","import React from \"react\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    return (\r\n        <div className=\"ProfileInfo\">\r\n            <p>Profile info</p>\r\n            <p>Selected profile: <span>{props.profileInfo.firstName} {props.profileInfo.lastName}</span></p>\r\n            <p>Description: <span>{props.profileInfo.description}</span></p>\r\n            <p>Address: <span>{props.profileInfo.adress.streetAddress}</span></p>\r\n            <p>City: <span>{props.profileInfo.adress.city}</span></p>\r\n            <p>State: <span>{props.profileInfo.adress.state}</span></p>\r\n            <p>Index: <span>{props.profileInfo.adress.zip}</span></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export let initialState = {\r\n    profileInfo:\r\n        {\r\n            \"id\": '-',\r\n            \"firstName\": \"Nothing to Show\",\r\n            \"lastName\": \"-\",\r\n            \"email\": \"-\",\r\n            \"phone\": \"-\",\r\n            \"adress\": {\r\n                \"streetAddress\": \"-\",\r\n                \"city\": \"-\",\r\n                \"state\": \"-\",\r\n                \"zip\": \"-\"\r\n            },\r\n            \"description\": \"-\",\r\n            \"uniqueId\": '0'\r\n        },\r\n    findUsers:[],\r\n    users: [\r\n        {\r\n            \"id\": 1,\r\n            \"firstName\": \"Nothing to Show\",\r\n            \"lastName\": \"-\",\r\n            \"email\": \"-\",\r\n            \"phone\": \"-\",\r\n            \"adress\": {\r\n                \"streetAddress\": \"-\",\r\n                \"city\": \"-\",\r\n                \"state\": \"-\",\r\n                \"zip\": \"-\"\r\n            },\r\n            \"description\": \"-\",\r\n           \"uniqueId\": '0'\r\n        },\r\n    ],\r\n\r\n    usersPerPage: 20,\r\n    lastPage: 1,\r\n    currentUsersPage: 1,\r\n    sortASC: true,\r\n    searchString:'',\r\n    searchState:'SelectNone'\r\n}","export const getLastPage =(usersQtty, usersPerPage)=>{\r\n    let lastPage=1\r\n    if (usersQtty % usersPerPage === 0) {\r\n        lastPage=usersQtty / usersPerPage\r\n        return lastPage\r\n    } else {\r\n        lastPage =  Math.floor(usersQtty / usersPerPage) + 1\r\n        return lastPage\r\n    }\r\n}\r\n\r\nexport const getUsersOnCurrentPage = (pageNumber, users, usersPerPage, searchState) => {\r\n\r\n    if (searchState !== 'SelectNone') {\r\n        users = users.filter(el => el.adress.state === searchState)\r\n    }\r\n    if (users.length <= usersPerPage) return users\r\n\r\n    let usersOnCurrentPage = []\r\n    let lastPage = getLastPage(users.length, usersPerPage)\r\n\r\n    if (pageNumber !== lastPage) {\r\n        for (let i = (pageNumber - 1) * usersPerPage; i < (pageNumber) * usersPerPage; i++) {\r\n            usersOnCurrentPage.push(users[i])\r\n        }\r\n        return usersOnCurrentPage\r\n    } else {\r\n        for (let i = (pageNumber - 1) * usersPerPage; i < users.length; i++) {\r\n            usersOnCurrentPage.push(users[i])\r\n        }\r\n        return usersOnCurrentPage\r\n    }\r\n}\r\n\r\nexport const getStatesList =(users)=>{\r\n    let statesListArray=[]\r\n    let statesList=[]\r\n    let idState = 0\r\n    users.forEach(el => {\r\n        if (!statesListArray.includes(el.adress.state)) {\r\n            statesListArray.push(el.adress.state)\r\n            statesList.push({id: idState, stateName: el.adress.state})\r\n            idState = idState + 1\r\n        }\r\n    })\r\n    return statesList\r\n}\r\n\r\nexport const sortByFieldASC = (field) => {\r\n    if (field!=='state') {\r\n        return (a, b) => {\r\n            if (a[field]===b[field]) return 0\r\n            return a[field] > b[field] ? 1 : -1;\r\n        }\r\n    }\r\n    return (a, b) => {\r\n        if (a['adress']['state']===b['adress']['state']) return 0\r\n        return a['adress']['state'] > b['adress']['state'] ? 1 : -1;\r\n    }\r\n}\r\n\r\nexport const sortByFieldDESC = (field) => {\r\n    if (field!=='state') {\r\n        return (a, b) => {\r\n            if (a[field]===b[field]) return 0\r\n            return a[field] < b[field] ? 1 : -1;\r\n        }\r\n    }\r\n    return (a, b) => {\r\n        if (a['adress']['state']===b['adress']['state']) return 0\r\n        return a['adress']['state'] < b['adress']['state'] ? 1 : -1;\r\n    }\r\n}","import React, {useEffect, useState} from \"react\"\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport SearchBlock from \"./Components/SearchBlock/SearchBlock\";\nimport MainTable from \"./Components/MainTable/MainTable\";\nimport Paginator from \"./Components/Paginator/Paginator\";\nimport ProfileInfo from \"./Components/ProfileInfo/ProfileInfo\";\nimport {initialState} from \"./Components/store\";\nimport {getLastPage, getStatesList, getUsersOnCurrentPage, sortByFieldASC, sortByFieldDESC} from \"./Components/common\";\n\nconst usersState = []\n\nfunction App() {\n\n\n    const baseURL = 'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json'\n    const [users, setUsers] = useState(usersState)\n    const [state, setState] = useState(initialState)\n\n    const usersOnCurrentPage = (p) => getUsersOnCurrentPage(p,\n        state.findUsers,\n        state.usersPerPage,\n        state.searchState\n    )\n\n    useEffect(() => {\n        const getUsers = async () => {\n            const usersFromServer = await fetchUsers()\n            setUsers(usersFromServer)\n            let lastPage = getLastPage(usersFromServer.length, state.usersPerPage)\n            let usersOnCurrentPage = getUsersOnCurrentPage(state.currentUsersPage, usersFromServer, state.usersPerPage , state.searchState)\n            setState({\n                ...state,\n                users: state.users = usersOnCurrentPage,\n                findUsers: state.findUsers = usersFromServer,\n                lastPage: state.lastPage = lastPage\n            })\n        }\n        getUsers()\n    }, [])\n\n    const fetchUsers = async () => {\n        const response = await fetch(baseURL)\n        const data = await response.json()\n        for (let i = 0; i < data.length; i++) {\n            data[i].uniqueId = i\n        }\n        return data\n    }\n\n    let statesList = getStatesList(state.findUsers)\n    const selectCurrentPage = (p) => {\n        setState({...state, currentUsersPage: p, users: state.users = usersOnCurrentPage(p)})\n    }\n\n    const onDecrement = () => {\n        if (state.currentUsersPage !== 1) {\n            setState({\n                ...state,\n                currentUsersPage: state.currentUsersPage - 1,\n                users: state.users = usersOnCurrentPage(state.currentUsersPage - 1)\n            })\n        }\n    }\n    const onIncrement = () => {\n        if (state.currentUsersPage !== state.lastPage) {\n            setState({\n                ...state,\n                currentUsersPage: state.currentUsersPage + 1,\n                users: state.users = usersOnCurrentPage(state.currentUsersPage + 1)\n            })\n        }\n    }\n\n    const sortTableBy = (field) => {\n        if (state.sortBy !== field) {\n            state.findUsers.sort(sortByFieldASC(field))\n        } else {\n            if (state.sortASC) {\n                state.findUsers.sort(sortByFieldASC(field))\n            } else {\n                state.findUsers.sort(sortByFieldDESC(field))\n            }\n        }\n        setState({\n            ...state, users: state.findUsers = usersOnCurrentPage(state.currentUsersPage),\n            sortASC: !state.sortASC,\n            sortBy: state.sortBy = field\n        })\n    }\n\n\n    const searchByString = (searchString) => {\n\n        const objectToArray = (objArray) => {\n            let result = []\n            let tempArrayOfObj = []\n\n            result = Object.values(objArray).filter(val => typeof (val) !== 'object')\n            tempArrayOfObj = Object.values(objArray).filter(val => typeof (val) === 'object')\n\n            while (Object.values(tempArrayOfObj).some(val => typeof (val) === 'object')) {\n                tempArrayOfObj.forEach(el => {\n\n                    Object.values(el).forEach(el => {\n\n                        if (typeof (el) === 'object') {\n                            tempArrayOfObj.push(el)\n                        } else {\n                            result.push(el)\n                        }\n                    })\n                    tempArrayOfObj.splice(0, 1)\n                })\n            }\n\n            return result\n        }\n\n        let resultUsers = []\n        let lastPage = 1\n        if (searchString !== '') {\n\n            for (let i = 0; i < users.length; i++) {\n                let user = {...users[i]}\n                delete user.uniqueId\n                let isStringInclude =\n                    objectToArray(user).some(el => el.toString().toLowerCase().includes(searchString.toLowerCase()))\n\n                if (isStringInclude) {\n                    resultUsers.push(users[i])\n                }\n            }\n        } else {\n            resultUsers = users\n        }\n\n        if (state.searchState === 'SelectNone') {\n            lastPage = getLastPage(resultUsers.length, state.usersPerPage)\n        } else {\n            lastPage = getLastPage(resultUsers.filter((el)=>el.adress.state === state.searchState).length, state.usersPerPage)\n        }\n\n        return [resultUsers, lastPage]\n    }\n\n    const filterByState = (stateName) => {\n\n        let resultUsers = []\n        let searchState = 'SelectNone'\n        let lastPage = getLastPage(state.findUsers.length, state.usersPerPage)\n\n        if (stateName === 'SelectNone') {\n            resultUsers = getUsersOnCurrentPage(state.currentUsersPage, state.findUsers, state.usersPerPage, stateName)\n        } else {\n            let result = []\n            state.findUsers.forEach(el => {\n                if (el.adress.state === stateName) result.push(el)\n            })\n\n            resultUsers = getUsersOnCurrentPage(state.currentUsersPage, result, state.usersPerPage, stateName)\n            searchState = stateName\n            lastPage = getLastPage(result.length, state.usersPerPage)\n        }\n\n        return [resultUsers, lastPage, searchState]\n    }\n\n    const search = (searchValue, searchBy) => {\n\n        let findUsers = state.findUsers\n        let usersOnCurrentPage = []\n        let lastPage = state.lastPage\n        let searchString = state.searchString\n        let searchState = state.searchState\n\n        if (searchBy === 'byString') {\n            [findUsers, lastPage] = searchByString(searchValue)\n            usersOnCurrentPage = getUsersOnCurrentPage(1, findUsers, state.usersPerPage, searchState)\n            searchString = searchValue\n        }\n\n        if (searchBy === 'byState') {\n            [usersOnCurrentPage, lastPage, searchState] = filterByState(searchValue)\n        }\n\n        setState({\n            ...state,\n            users: state.users = usersOnCurrentPage,\n            findUsers: state.findUsers = findUsers,\n            lastPage: state.lastPage = lastPage,\n            searchString: state.searchString = searchString,\n            searchState: state.searchState = searchState\n        })\n    }\n\n    const showProfile = (userId) => {\n\n        let newProfile = {}\n        newProfile = state.users.find(UId => UId.uniqueId.toString() === userId)\n        setState({...state, profileInfo: state.profileInfo = newProfile})\n    }\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className={'MainContent'}>\n\n                <SearchBlock statesList={statesList}\n                             filterByState={filterByState}\n                             searchBy={searchByString}\n                             search={search}\n                             searchState={state.searchState}\n                />\n\n                <MainTable\n                    users={state.users}\n                    sortTableBy={sortTableBy}\n                    state={state}\n                    showProfile={showProfile}\n                />\n                <Paginator\n                    currentUsersPage={state.currentUsersPage}\n                    pagesCount={state.lastPage}\n                    selectCurrentPage={selectCurrentPage}\n                    onDecrement={onDecrement}\n                    onIncrement={onIncrement}\n                />\n                <ProfileInfo profileInfo={state.profileInfo}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {initialState} from \"./Components/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App state={initialState}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}