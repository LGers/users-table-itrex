{"version":3,"sources":["Components/MainTable/MainTable.module.css","Components/Paginator/Paginator.module.css","Components/SearchBlock/SearchBlock.module.css","Components/Header/Header.jsx","Components/SearchBlock/SearchBlock.jsx","Components/MainTable/MainTable.jsx","Components/Paginator/Paginator.jsx","Components/ProfileInfo/ProfileInfo.jsx","Components/store.js","Components/common.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","className","SearchBlock","st","SearchContainer","NameSearch","placeholder","onChange","e","searchBy","target","value","StateFilter","name","size","filterByState","statesList","map","el","stateName","id","UserRow","onClick","showProfile","parentElement","uniqueId","MainTable","userId","firstName","lastName","email","phone","state","usersList","users","u","index","adress","pos","sortDirection","field","sortBy","sortASC","sortTableBy","Paginator","totalUsersCount","pageSize","currentUsersPage","selectCurrentPage","onDecrement","onIncrement","pagesCount","Math","ceil","pages","i","push","console","log","prevBtn","p","PaginatorActive","onPageChanged","dateTime","nextBtn","ProfileInfo","profileInfo","description","streetAddress","city","zip","initialState","findUsers","counter","usersPerPage","lastPage","currentSearch","searchString","searchState","getLastPage","usersQtty","floor","usersState","App","useState","setUsers","useEffect","a","fetchUsers","usersFromServer","getUsers","fetch","response","json","data","length","setState","usersOnCurrentPage","pageNumber","userState","getUsersOnCurrentPage","statesListArray","idState","forEach","includes","getStatesList","sortByFieldASC","b","sortInState","sortedUsers","sort","sortByFieldDESC","window","result","toString","sortby","newProfile","find","UId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.523faf5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainTable\":\"MainTable_MainTable__35-bd\",\"MainTableActive\":\"MainTable_MainTableActive__2gB4t\",\"userId\":\"MainTable_userId__3d3Uo\",\"sort\":\"MainTable_sort__Q8ZD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__2a1vi\",\"PaginatorActive\":\"Paginator_PaginatorActive__3EyvI\",\"prevBtn\":\"Paginator_prevBtn__2Nz9h\",\"nextBtn\":\"Paginator_nextBtn__1v2J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"SearchBlock_SearchContainer__fa6KC\",\"NameSearch\":\"SearchBlock_NameSearch__2MwFv\",\"StateFilter\":\"SearchBlock_StateFilter__2wsB-\"};","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <p>\r\n                IT Rex test\r\n            </p>\r\n\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport st from './SearchBlock.module.css'\r\n\r\n\r\nconst SearchBlock = (props) => {\r\n    return (\r\n\r\n        <div className={st.SearchContainer}>\r\n\r\n            <input className={st.NameSearch} placeholder='Search by Name:'\r\n                   onChange={(e)=>{\r\n                       props.searchBy(e.target.value, 'byString')\r\n                   }}/>\r\n\r\n            <div>\r\n                <select className={st.StateFilter} name=\"State\" size='1'\r\n                        onChange={(e) => {\r\n                    props.filterByState(e.target.value, 'byState')\r\n\r\n                }}>\r\n                    <option value=\"SelectNone\">Select State</option>\r\n                    {props.statesList.map(el => <option key={el.id} value={el.stateName}>{el.stateName}</option>)}\r\n                </select>\r\n                {/*<input type=\"text\" placeholder='Add Task'*/}\r\n                {/*       value={'some text'}*/}\r\n                {/*       onClick={(e)=>{*/}\r\n                {/*           console.log(e.target.value)*/}\r\n                {/*       }}*/}\r\n                {/*       // onChange={(e)=> setText(e.target.value) }*/}\r\n                {/*/>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBlock;","import React from \"react\";\r\nimport st from \"./MainTable.module.css\"\r\n\r\nconst UserRow = (props) => {\r\n    return (\r\n        <div  onClick={(e)=>{\r\n            // console.log(e.target.parentElement.firstChild.innerText)\r\n            // console.log(e.target.parentElement.id)\r\n            // console.log(e)\r\n            // console.log('e.target.id', e.target.id)\r\n            // console.log('e.nativeEvent.pointerId', e.nativeEvent.pointerId)\r\n            // console.log('e.target.id', e.target)\r\n            props.showProfile(e.target.parentElement.id)\r\n        }}>\r\n            <div id = {props.uniqueId} className={st.MainTable} >\r\n                <div className={st.userId}>{props.id}</div>\r\n                <div>{props.uniqueId} - {props.firstName}</div>\r\n                <div>{props.lastName}</div>\r\n                <div>{props.email}</div>\r\n                <div>{props.phone}</div>\r\n                <div>{props.state}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MainTable = (props) => {\r\n    const usersList = props.users.map((u, index) => (\r\n        <UserRow key={index}\r\n                 id={u.id}\r\n                 firstName={u.firstName}\r\n                 lastName={u.lastName}\r\n                 email={u.email}\r\n                 phone={u.phone}\r\n                 state={u.adress.state}\r\n                 pos={u.index}\r\n                 showProfile={props.showProfile}\r\n                 uniqueId={u.uniqueId}\r\n        />)\r\n    )\r\n\r\n    const sortDirection = (field) => {\r\n        if (props.state.sortBy !== field)\r\n        {return <span>-</span>}\r\n\r\n        if (props.state.sortASC) {\r\n            return <span>↓</span>\r\n        } else return <span>↑</span>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={st.MainTable}>\r\n                <div className={st.userId} onClick={(e) => {\r\n                    props.sortTableBy('id')\r\n                }}><p>id {sortDirection('id')}</p></div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('firstName')\r\n                }}>\r\n                    <p>First name{sortDirection('firstName')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('lastName')\r\n                }}>\r\n                    <p>Last Name {sortDirection('lastName')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('email')\r\n                }}>\r\n                    <p>Email{sortDirection('email')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('phone')\r\n                }}>\r\n                    <p>Phone{sortDirection('phone')}</p>\r\n                </div>\r\n                <div onClick={(e) => {\r\n                    props.sortTableBy('state')\r\n                }}>\r\n                    <p>State{sortDirection('state')}</p>\r\n                </div>\r\n            </div>\r\n            {usersList}\r\n        </div>\r\n    )\r\n}\r\nexport default MainTable;","import React, {useState} from \"react\";\r\nimport st from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({\r\n                       totalUsersCount, pageSize, currentUsersPage,\r\n                       selectCurrentPage, onDecrement, onIncrement\r\n                   }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    console.log('currentUsersPage', currentUsersPage)\r\n    const onPageChanged = (p) => {\r\n        selectCurrentPage(p)\r\n    }\r\n\r\n    return (\r\n        <div className={st.Paginator}>\r\n            <div className={st.prevBtn}\r\n                 onClick={(e) => {\r\n                     onDecrement()\r\n                 }}>Previous\r\n            </div>\r\n\r\n            {pages.map(p => {\r\n                return <div key={p.dateTime}\r\n                            className={(currentUsersPage === p) && st.PaginatorActive}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p);\r\n                            }}\r\n                >{p}</div>\r\n            })}\r\n\r\n            <div className={st.nextBtn}\r\n                 onClick = {(e) => {\r\n                onIncrement()\r\n            }}>Next\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;","import React from \"react\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    // debugger\r\n    return (\r\n        <div className=\"ProfileInfo\">\r\n            <p>Profile info</p>\r\n            <p>Selected profile: <span>{props.profileInfo.firstName} {props.profileInfo.lastName}</span></p>\r\n            <p>Description: <span>{props.profileInfo.description}</span></p>\r\n            <p>Address: <span>{props.profileInfo.adress.streetAddress}</span></p>\r\n            <p>City: <span>{props.profileInfo.adress.city}</span></p>\r\n            <p>State: <span>{props.profileInfo.adress.state}</span></p>\r\n            <p>Index: <span>{props.profileInfo.adress.zip}</span></p>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","export let initialState = {\r\n    profileInfo:\r\n        {\r\n            \"id\": '-',\r\n            \"firstName\": \"Nothing to Show\",\r\n            \"lastName\": \"-\",\r\n            \"email\": \"-\",\r\n            \"phone\": \"-\",\r\n            \"adress\": {\r\n                \"streetAddress\": \"-\",\r\n                \"city\": \"-\",\r\n                \"state\": \"-\",\r\n                \"zip\": \"-\"\r\n            },\r\n            \"description\": \"-\",\r\n            \"uniqueId\": '0'\r\n        },\r\n    findUsers:[],\r\n    users: [\r\n        {\r\n            \"id\": 1,\r\n            \"firstName\": \"Nothing to Show\",\r\n            \"lastName\": \"-\",\r\n            \"email\": \"-\",\r\n            \"phone\": \"-\",\r\n            \"adress\": {\r\n                \"streetAddress\": \"-\",\r\n                \"city\": \"-\",\r\n                \"state\": \"-\",\r\n                \"zip\": \"-\"\r\n            },\r\n            \"description\": \"-\",\r\n           \"uniqueId\": '0'\r\n        },\r\n    ],\r\n    statesList: [\r\n        {id: 1, stateName: \"WI\"},\r\n        {id: 2, stateName: \"TN\"},\r\n        {id: 3, stateName: \"FL\"},\r\n        {id: 4, stateName: \"WI\"},\r\n        {id: 5, stateName: \"NE\"},\r\n        {id: 6, stateName: \"NY\"},\r\n    ],\r\n    counter: 1,\r\n    usersPerPage: 20,\r\n    lastPage: 1,\r\n    currentUsersPage: 1,\r\n    currentSearch: '',\r\n    // filterStates: '',\r\n    sortBy: '', //id, FirstName, LastName,Email, phone, state\r\n    sortASC: true,\r\n    searchString:'',\r\n    searchState:''\r\n}","export const getLastPage =(usersQtty,usersPerPage)=>{\r\n    let lastPage=1\r\n    if (usersQtty % usersPerPage === 0) {\r\n        lastPage=usersQtty / usersPerPage\r\n        return lastPage\r\n    } else {\r\n        lastPage =  Math.floor(usersQtty / usersPerPage) + 1\r\n        return lastPage\r\n    }\r\n}\r\n\r\nexport const getUsersOnCurrentPage = (pageNumber, users, usersPerPage, userState) => {\r\n\r\n    // if (users.length <= usersPerPage && userState === '') return users\r\n    if (users.length <= usersPerPage) return users\r\n\r\n    let usersOnCurrentPage = []\r\n    // let usersSelectByState = users\r\n    /*if (userState !== '') {\r\n        users.forEach(user => {\r\n            if (user.adress.state === userState){\r\n                usersSelectByState.push(user)\r\n            }\r\n        })\r\n    }*/\r\n\r\n    // let lastPage = getLastPage(users.length, usersPerPage)\r\n    let lastPage = getLastPage(users.length, usersPerPage)\r\n\r\n    // debugger\r\n    //Make users by users per page\r\n    if (pageNumber !== lastPage) {\r\n        for (let i = (pageNumber - 1) * usersPerPage; i < (pageNumber) * usersPerPage; i++) {\r\n            // usersOnCurrentPage.push(users[i])\r\n            usersOnCurrentPage.push(users[i])\r\n        }\r\n        return usersOnCurrentPage\r\n    } else {\r\n        for (let i = (pageNumber - 1) * usersPerPage; i < users.length; i++) {\r\n            usersOnCurrentPage.push(users[i])\r\n        }\r\n        return usersOnCurrentPage\r\n    }\r\n}\r\n\r\nexport const getStatesList =(users)=>{\r\n    let statesListArray=[]\r\n    let statesList=[]\r\n    let idState=0\r\n    users.forEach(el=>{\r\n        if (!statesListArray.includes(el.adress.state)) {\r\n            statesListArray.push(el.adress.state)\r\n            statesList.push({id:idState, stateName: el.adress.state})\r\n            idState=idState+1\r\n        }\r\n    })\r\n    // console.log('statesList',statesList)\r\n    return statesList\r\n}","import React, {useEffect, useState} from \"react\"\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport SearchBlock from \"./Components/SearchBlock/SearchBlock\";\nimport MainTable from \"./Components/MainTable/MainTable\";\nimport Paginator from \"./Components/Paginator/Paginator\";\nimport ProfileInfo from \"./Components/ProfileInfo/ProfileInfo\";\nimport {initialState} from \"./Components/store\";\nimport {getLastPage, getStatesList, getUsersOnCurrentPage} from \"./Components/common\";\n\nconst usersState = []\n\nfunction App() {\n\n\n    const baseURL = 'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json'\n    const [users, setUsers] = useState(usersState)\n\n    useEffect(() => {\n        const getUsers = async () => {\n            const usersFromServer = await fetchUsers()\n            setUsers(usersFromServer)\n        }\n\n        getUsers()\n    }, [])\n\n    const fetchUsers = async () => {\n        const response = await fetch(baseURL)\n        const data = await response.json()\n        // console.log('jsondata', data)\n        for (let i = 0; i < data.length; i++) {\n            data[i].uniqueId = i\n        }\n        return data\n    }\n    initialState.users = users\n    initialState.findUsers = users\n    initialState.lastPage = getLastPage(users.length, initialState.usersPerPage)\n    console.log('initialState', initialState)\n\n    const [state, setState] = useState(initialState)\n    // console.log('State', state)\n    // console.log('users', users)\n    // debugger\n\n\n    const usersOnCurrentPage = getUsersOnCurrentPage(state.currentUsersPage,\n        state.users, //findUsers,\n        state.usersPerPage,\n        // state.searchState\n    )\n    // console.log('state.currentUsersPage', state.currentUsersPage)\n    // console.log('usersOnCurrentPage', usersOnCurrentPage)\n    let statesList = getStatesList(users)\n\n\n    const onDecrement = () => {\n        if (state.currentUsersPage !== 1) {\n            setState({...state, currentUsersPage: state.currentUsersPage - 1})\n        }\n    }\n    const onIncrement = () => {\n        if (state.currentUsersPage !== state.lastPage) {\n            setState({...state, currentUsersPage: state.currentUsersPage + 1})\n        }\n    }\n\n    const selectCurrentPage = (p) => {\n        setState({...state, currentUsersPage: p})\n    }\n    const sortByFieldASC = (field) => {\n        return (a, b) => a[field] > b[field] ? 1 : -1;\n    }\n    const sortByFieldDESC = (field) => {\n        return (a, b) => a[field] > b[field] ? -1 : 1;\n    }\n\n    const sortInState = (field) => {\n        let sortedUsers = []\n        if (state.sortBy !== field) {\n            sortedUsers = state.users.sort(sortByFieldASC(field))\n            setState({\n                ...state, users: state.users = sortedUsers,\n                sortASC: state.sortASC = false,\n                sortBy: state.sortBy = field\n            })\n        } else {\n\n            if (state.sortASC) {\n                sortedUsers = state.users.sort(sortByFieldASC(field))\n            } else {\n                sortedUsers = state.users.sort(sortByFieldDESC(field))\n            }\n            setState({\n                ...state, users: state.users = sortedUsers,\n                sortASC: !state.sortASC,\n                sortBy: state.sortBy = field\n            })\n        }\n\n\n    }\n    const sortTableBy = (sortby) => {\n        switch (sortby) {\n            case 'id' :\n                sortInState('id')\n                break\n            case 'firstName' :\n                sortInState('firstName')\n                break\n            case 'lastName' :\n                sortInState('lastName')\n                break\n            case 'phone' :\n                sortInState('phone')\n                break\n            case 'email' :\n                sortInState('email')\n                break\n            case 'state' :\n                sortInState('state')\n                break\n            default:\n                return 1\n        }\n    }\n\n    const filterByState = (field) => {\n        if (field === 'SelectNone') {\n            debugger\n            setState({\n                ...state, users: state.users = users,\n                searchState: state.searchState = '',\n                findUsers: state.findUsers=users\n            })\n        } else {\n            let result = []\n            users.forEach(el => {\n                if (el.adress.state === field) result.push(el)\n            })\n            setState({\n                ...state, users: state.users = result,\n                searchState: state.searchState = field\n            })\n        }\n    }\n\n    const searchBy = (searchString, searchBy) => {\n        console.log('search string = ', searchString)\n        /*let result = []\n        debugger\n\n        if (searchString==='byState') {\n            if (searchString === 'SelectNone') {\n                result=users\n                setState({\n                    ...state, users: state.users = users,\n                    searchState: state.searchState = searchString\n                })\n            } else {\n                let result = []\n                state.users.forEach(el => {\n                    if (el.adress.state === searchString) result.push(el)\n                })\n                setState({...state, users: state.users = result})\n            }\n        }*/\n\n        if (searchString !== '') {\n            let result = []\n            for (let i = 0; i < users.length; i++) {\n                let el = users[i]\n\n                if (el.id.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.firstName.includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.lastName.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.email.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.phone.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.adress.streetAddress.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.adress.city.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.adress.state.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.adress.zip.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.description.toString().includes(searchString)) {\n                    result.push(el)\n                }\n            }\n            setState({...state, users: state.users = result})\n        } else setState({...state, users: state.users = users})\n    }\n\n    const showProfile = (userId) => {\n        console.log(userId)\n        let newProfile = {}\n        newProfile = state.users.find(UId => UId.uniqueId.toString() === userId)\n        setState({...state, profileInfo: state.profileInfo = newProfile})\n    }\n    window.state = state\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className={'MainContent'}>\n                {/*<div>*/}\n                {/*    <button onClick={onDecrement}>minus</button>*/}\n                {/*    Current Page: <span id=\"counter\">{state.currentUsersPage}</span>*/}\n                {/*    <button onClick={onIncrement}>plus</button>*/}\n                {/*</div>*/}\n\n                <SearchBlock statesList={statesList}\n                             filterByState={filterByState}\n                             searchBy={searchBy}\n                />\n\n                <MainTable users={usersOnCurrentPage}\n                           sortTableBy={sortTableBy}\n                           state={state}\n                           showProfile={showProfile}\n                />\n                <Paginator totalUsersCount={state.users.length}\n                           pageSize={state.usersPerPage}\n                           currentUsersPage={state.currentUsersPage}\n                           selectCurrentPage={selectCurrentPage}\n                           onDecrement={onDecrement}\n                           onIncrement={onIncrement}\n                />\n                <ProfileInfo profileInfo={state.profileInfo}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import state from \"./Components/Redux/state\"\nimport {initialState} from \"./Components/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App state={initialState}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}